@charset "utf-8";

@use "sass:math";
@use "breakpoint";
@use "variables";

// コンテンツ幅
// $width: wide || narrow
@mixin content_width($width) {
  margin-right: auto;
  margin-left: auto;
  padding-right: variables.$content_paddingS;
  padding-left: variables.$content_paddingS;
  width: 100%;
  @include breakpoint.md {
    padding-right: variables.$content_paddingM;
    padding-left: variables.$content_paddingM;
  }
  @include breakpoint.lg {
    padding-right: variables.$content_paddingL;
    padding-left: variables.$content_paddingL;
  }
  @if $width == wide {
    max-width: calc(#{variables.$content_width} + #{variables.$content_paddingL} * 2);
  } @else if $width == narrow {
    max-width: calc(#{variables.$content_width_narrow} + #{variables.$content_paddingL} * 2);
  }
}

// object-fit
// $fit: object-fit値、$position: object-position値
@mixin object_fit($fit: cover, $position: null) {
  object-fit: $fit;
  @if $position {
    object-position: $position;
    font-family: "object-fit: #{$fit}; object-position: #{$position}";
  } @else {
    font-family: "object-fit: #{$fit};";
  }
}

// アスペクト比
// $width: 幅、$height: 高さ
@mixin aspect-ratio($width, $height) {
  position: relative;
  @include clearfix;
  &::before {
    content: "";
    float: left;
    padding-top: math.div($height, $width) * 100%;
  }
  & > :first-child {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// visually-hidden:
// 視覚的にコンテンツを非表示にしたい場合や、スクリーンリーダーや
// 検索エンジンからアクセスできるようにしたい場合に使う
@mixin visually_hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px);
  border: 0;
}
